# -*- coding: utf-8 -*-
"""EXPT_08_SUYOG_DHANDE_2024310005.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JvfiF6fmGe93k5Yn4WX7BMlAP2I5ZD0z

End-to-End Case Study with Deployment on Streamlit
Title: Energy Consumption Prediction in Smart Buildings
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler



data = pd.read_csv('powerconsumption.csv')

# Check for missing values
print(data.isnull().sum())

# Fill missing values (if any)
data.fillna(method='ffill', inplace=True)

# Normalize continuous features
scaler = StandardScaler()
data[['Temperature', 'Humidity']]=scaler.fit_transform(data[['Temperature', 'Humidity']])

# Visualize data
sns.pairplot(data, diag_kind='kde')
plt.show()



from sklearn.model_selection import train_test_split
from sklearn.linear_model import Ridge
from sklearn.metrics import mean_squared_error

# Split data
X = data[['Temperature', 'Humidity']]
y = data['PowerConsumption_Zone1']
X_train, X_test, y_train, y_test = train_test_split(X, y,
test_size=0.2, random_state=42)

# Train model
model = Ridge()
model.fit(X_train, y_train)

# Test model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)

print(f'Mean Squared Error: {mse}')



# Install streamlit if not already installed


# Import necessary libraries
import streamlit as st
import numpy as np

# Streamlit app
st.title("Power Consumption Prediction")

# Input fields
temperature = st.number_input("Temperature (Â°C)")
humidity = st.number_input("Humidity (%)")

# Prediction button
if st.button("Predict"):
    # Make prediction
    input_features = np.array([[temperature, humidity]]) 
    prediction = model.predict(input_features)[0]
    st.write(f"Predicted Energy Consumption: {prediction:.2f} kWh")





import joblib
joblib.dump(model, 'ridge_model.pkl')
